---
interface Props {
  contentId: string
}
// TODO: Figure out if I can refer to contentId's value as an id in styles
// rather than using #content
const { contentId } = Astro.props

/** There's a bug with mdx and Astro where p tags on new lines add empty p tags around the content.
 * Unfortunately our linter / prettier automatically puts those tags on new lines for large blocks
 * and so I've added the quickstart content to prettierignore for now. */
---

<article id="article">
  <section id={contentId}>
    <slot />
  </section>
</article>

<style>
  article {
    margin-top: var(--space-10x);
  }

  #content :global(*) {
    margin-top: 0;
    margin-bottom: 0;
    max-width: 100%;
  }

  #content > :global(*) {
    margin-top: var(--space-4x);
  }

  #content :global(p + ul) {
    margin-top: 0;
  }

  #content :global(h2) {
    color: black;
    font-size: 20px;
    margin-top: var(--space-10x);
    scroll-margin-top: calc(var(--space-4x) + var(--theme-navbar-height));
  }

  #content :global(li) {
    line-height: 1.5;
  }

  #content :global(ol) {
    padding-left: 0;
    counter-reset: counter;
  }

  #content :global(ol > li:first-of-type) {
    border-top: 1px solid var(--gray-300, #ced0d5);
  }

  #content :global(ol > li) {
    padding: var(--space-2x) 0px;
    border-bottom: 1px solid var(--gray-300, #ced0d5);
    list-style: none;
  }

  #content :global(details) {
    overflow: hidden;
  }

  #content :global(details > summary) {
    display: grid;
    grid-template-columns: 0 1fr auto;
    align-items: center;
    gap: var(--space-8x);
    cursor: pointer;
    color: var(--blue-800, #1a2b6b);
    font-size: 16px;
  }

  #content :global(details > summary::before) {
    content: counters(counter, ".") "";
    counter-increment: counter;
    color: var(--gray-400, #b7bac0);
    letter-spacing: -0.24px;
  }

  #content :global(details > summary::after) {
    content: url(/images/quickstarts/arrow-down.svg);
    -webkit-mask: url(/images/quickstarts/arrow-down.svg) no-repeat center;
    -webkit-mask-size: var(--space-6x);
    background-color: var(--gray-400, #b7bac0);
    transition: 0.25s transform ease;
  }

  /* Using custom attribute 'expanded' (created by Accordion)
  rather than 'open' since some browsers (Safari) have no respect for details attributes */
  #content :global(details[expanded] > summary::after) {
    transform: rotate(180deg);
    background-color: #174cc2;
  }

  #content :global(details > :not(summary)) {
    margin-top: 0;
    padding-left: var(--space-8x);
    padding-top: var(--space-6x);
  }

  #content :global(details > :not(summary):last-child) {
    padding-bottom: var(--space-3x);
  }

  @media (min-width: 48em) {
    #content :global(h2) {
      scroll-margin-top: var(--space-4x);
    }
  }

  @media (min-width: 50em) {
    #content :global(h2) {
      font-size: 28px;
      margin-top: var(--space-6x);
      color: var(--blue-800, #1a2b6b);
    }

    #content > :global(*) {
      margin-top: var(--space-6x);
    }

    #content :global(ol > li) {
      padding: var(--space-3x) 0px;
    }

    #content :global(details > summary) {
      font-size: 20px;
    }
  }
</style>

<script>
  import { Accordion } from "./accordion"

  document.querySelectorAll("details").forEach((el) => new Accordion(el))
</script>
