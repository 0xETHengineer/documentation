---
import HeadCommon from "../components/HeadCommon.astro"
import HeadSEO from "../components/HeadSEO.astro"
import Header from "../components/Header/Header.astro"
import Quickstart from "../components/Quickstart/Quickstart.astro"
import QuickstartPanel from "../components/Quickstart/QuickstartPanel.astro"
import * as CONFIG from "../config"
import { NewsletterCTA } from "../components/Footer/NewsletterCTA"
import Footer from "~/components/Footer/Footer.astro"
import { QuickstartsFrontmatter } from "~/content/config"
import { MarkdownHeading } from "astro"

interface Props {
  frontmatter: QuickstartsFrontmatter
  headings: MarkdownHeading[]
}
const { frontmatter, headings } = Astro.props

const formattedContentTitle = frontmatter.title
  ? `${frontmatter.title} | ${CONFIG.SITE.title}`
  : `${CONFIG.PAGE.titleFallback} | ${CONFIG.SITE.title}`

const canonicalURLStr = new URL(Astro.url.pathname, Astro.site).href.replace(/\/+$/, "")
const canonicalURL = new URL(canonicalURLStr)
---

<html dir="ltr" lang="en-us" class="initial">
  <head>
    <HeadCommon />
    <HeadSEO content={frontmatter} {canonicalURL} />
    <title>{formattedContentTitle}</title>
    <style>
      html {
        scroll-behavior: smooth;
      }

      .layout {
        display: grid;
        /* TODO: Remove gutter, doc-padding from layout, place in Quickstart and QuickstartPanel */
        --gutter: var(--space-6x);
        --doc-padding: 2rem;
        max-width: var(--fullwidth-max-width);
        margin-left: auto;
        margin-right: auto;
      }

      #grid-main {
        padding: var(--doc-padding) var(--gutter) var(--space-20x);
        background: linear-gradient(180deg, rgba(245, 247, 253, 1) 0%, rgba(245, 247, 253, 0) 50%);
        order: 1;
      }

      #grid-right {
        order: 0;
      }

      @media (min-width: 72em) {
        .layout {
          grid-template-columns: 2fr 1fr;
          gap: 2em;
        }

        #grid-right {
          order: 2;
        }
      }
    </style>
    <style is:global>
      .layout > * {
        width: 100%;
        height: 100%;
      }
    </style>
    <script>
      import "../scripts/index.ts"
    </script>
    <script define:vars={{ frontmatter }}>
      const persistedArticle = {
        title: frontmatter.title,
        url: frontmatter.url,
      }

      const recentArticles = JSON.parse(localStorage.getItem("recentArticles") || "[]")

      if (!recentArticles.some((article) => article.url === persistedArticle.url)) {
        recentArticles.unshift(persistedArticle)
        localStorage.setItem("recentArticles", JSON.stringify(recentArticles.slice(0, 5)))
      }
    </script>
  </head>

  <body>
    <Header />
    <main class="layout" style={{ "margin-bottom": 0 }}>
      <div id="grid-main">
        <Quickstart {frontmatter}>
          <slot />
        </Quickstart>
      </div>
      <div id="grid-right">
        <QuickstartPanel {frontmatter} {headings} />
      </div>
    </main>
    <NewsletterCTA client:visible />
    <Footer />
  </body>
</html>
