---
import HeadCommon from "../components/HeadCommon.astro"
import HeadSEO from "../components/HeadSEO.astro"
import Header from "../components/Header/Header.astro"
import Quickstart from "../components/Quickstart/Quickstart.astro"
import QuickstartPanel from "../components/Quickstart/QuickstartPanel.astro"
import * as CONFIG from "../config"
import { NewsletterCTA } from "../components/Footer/NewsletterCTA"
import Footer from "~/components/Footer/Footer.astro"
import { QuickstartsFrontmatter } from "~/content/config"
import { MarkdownHeading } from "astro"

interface Props {
  frontmatter: QuickstartsFrontmatter
  headings: MarkdownHeading[]
}
const { frontmatter, headings } = Astro.props

const formattedContentTitle = frontmatter.title
  ? `${frontmatter.title} | ${CONFIG.SITE.title}`
  : `${CONFIG.PAGE.titleFallback} | ${CONFIG.SITE.title}`

const canonicalURLStr = new URL(Astro.url.pathname, Astro.site).href.replace(/\/+$/, "")
const canonicalURL = new URL(canonicalURLStr)

const includeLinkToWalletScript = !!Astro.props?.frontmatter?.metadata?.linkToWallet
---

<html dir="ltr" lang="en-us" class="initial">
  <head>
    <HeadCommon />
    <HeadSEO content={frontmatter} {canonicalURL} />
    <title>{formattedContentTitle}</title>
    <style>
      html {
        scroll-behavior: smooth;
      }
      body {
        width: 100%;
        display: grid;
        grid-template-rows: var(--theme-navbar-height) 1fr;
        --gutter: var(--space-6x);
        --doc-padding: 2rem;
      }

      .layout {
        display: grid;
        justify-content: center;
        grid-auto-flow: column;
        grid-template-columns: minmax(0, var(--max-width)) 0fr;
        overflow-x: hidden;
      }

      #grid-main {
        padding: var(--doc-padding) var(--gutter) var(--space-20x);
        display: flex;
        flex-direction: column;
        background: linear-gradient(180deg, rgba(245, 247, 253, 1) 0%, rgba(245, 247, 253, 0) 50%);
      }

      #grid-right {
        display: none;
      }

      @media (min-width: 50em) {
        .layout {
          overflow: initial;
          grid-template-columns: minmax(0, var(--max-width)) 18rem;
          gap: 2em;
        }
      }

      @media (min-width: 72em) {
        .layout {
          grid-template-columns: minmax(0, var(--max-width)) 18rem;
        }

        #grid-right {
          display: flex;
        }
      }
    </style>
    <style is:global>
      .layout > * {
        width: 100%;
        height: 100%;
      }

      .mobile-sidebar-toggle {
        overflow: hidden;
      }

      .mobile-sidebar-toggle #grid-left {
        display: block;
        top: 2rem;
      }
    </style>
    <script>
      import "../scripts/index.ts"
    </script>
    <script define:vars={{ includeLinkToWalletScript }}>
      window.includeLinkToWalletScript = includeLinkToWalletScript
    </script>
    <script define:vars={{ frontmatter }}>
      const persistedArticle = {
        title: frontmatter.title,
        url: frontmatter.url,
      }

      const recentArticles = JSON.parse(localStorage.getItem("recentArticles") || "[]")

      if (!recentArticles.some((article) => article.url === persistedArticle.url)) {
        recentArticles.unshift(persistedArticle)
        localStorage.setItem("recentArticles", JSON.stringify(recentArticles.slice(0, 5)))
      }
    </script>
  </head>

  <body>
    <Header frontmatter={frontmatter} />
    <main class="layout" style={{ "margin-bottom": 0 }}>
      <div id="grid-main">
        <Quickstart frontmatter={frontmatter}>
          <slot />
        </Quickstart>
      </div>
      <div id="grid-right">
        <QuickstartPanel frontmatter={frontmatter} {headings} />
      </div>
    </main>
    <NewsletterCTA client:visible />
    <Footer />

    <script>
      //@ts-expect-error
      if (window.includeLinkToWalletScript) {
        //@ts-expect-error astro handles the .ts extension
        import("../scripts/link-to-wallet.ts")
      }
    </script>
  </body>
</html>
